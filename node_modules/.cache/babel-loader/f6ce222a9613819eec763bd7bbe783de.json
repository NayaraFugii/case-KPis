{"ast":null,"code":"var _jsxFileName = \"/home/user/\\xC1rea de Trabalho/case-KPis/src/components/form-nps-textarea/FormNpsText.js\";\nimport './FormNpsText.scss';\nimport React, { useState, useEffect } from 'react';\nimport ButtonComponent from '../button-component/ButtonComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormNpsText(_ref) {\n  let {\n    title,\n    question,\n    answer,\n    coment,\n    showTag,\n    showButtons,\n    id,\n    value,\n    setValue\n  } = _ref;\n  const buttonNumber = [0, 1, 2, 3, 4, 5, 7, 8, 9, 10];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-form\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-order\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnQuestions\",\n            style: showButtons,\n            children: buttonNumber.map((number, indice) => /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              nameBtn: number,\n              variant: \"outlined\",\n              buttonClick: () => setValue({ ...value,\n                nps: { ...value.nps,\n                  question1: { ...value.nps.question1,\n                    number\n                  }\n                }\n              })\n            }, indice, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area-coment\",\n          style: showTag,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: coment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: id,\n            placeholder: \"Digite sua resposta\",\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setValue({ ...value,\n                nps: { ...value.nps,\n                  question2: { ...value.nps.question2,\n                    text: target.value\n                  }\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = FormNpsText;\n;\nexport default FormNpsText;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormNpsText\");","map":{"version":3,"sources":["/home/user/√Årea de Trabalho/case-KPis/src/components/form-nps-textarea/FormNpsText.js"],"names":["React","useState","useEffect","ButtonComponent","FormNpsText","title","question","answer","coment","showTag","showButtons","id","value","setValue","buttonNumber","map","number","indice","nps","question1","target","question2","text"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,qCAA5B;;;;AAGA,SAASC,WAAT,OAAoG;AAAA,MAA/E;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA,WAA5C;AAAyDC,IAAAA,EAAzD;AAA6DC,IAAAA,KAA7D;AAAoEC,IAAAA;AAApE,GAA+E;AAClG,QAAMC,YAAY,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAArB;AAEE,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BT;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,KAAK,EAAEG,WAArC;AAAA,sBACCI,YAAY,CAACC,GAAb,CAAiB,CAACC,MAAD,EAASC,MAAT,kBAChB,QAAC,eAAD;AAA8B,cAAA,OAAO,EAAED,MAAvC;AAA+C,cAAA,OAAO,EAAC,UAAvD;AAAkE,cAAA,WAAW,EAAE,MAAMH,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWM,gBAAAA,GAAG,EAAC,EAAC,GAAGN,KAAK,CAACM,GAAV;AAAeC,kBAAAA,SAAS,EAAC,EAAC,GAAGP,KAAK,CAACM,GAAN,CAAUC,SAAd;AAAyBH,oBAAAA;AAAzB;AAAzB;AAAf,eAAD;AAA7F,eAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA,oBADD;AADD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAaI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAER,OAApC;AAAA,kCACE;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,EAAE,EAAEG,EAAd;AAAkB,YAAA,WAAW,EAAC,qBAA9B;AAAoD,YAAA,QAAQ,EAAE;AAAA,kBAAC;AAAES,gBAAAA;AAAF,eAAD;AAAA,qBAAgBP,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWM,gBAAAA,GAAG,EAAE,EAAC,GAAGN,KAAK,CAACM,GAAV;AAAeG,kBAAAA,SAAS,EAAC,EAAC,GAAGT,KAAK,CAACM,GAAN,CAAUG,SAAd;AAAyBC,oBAAAA,IAAI,EAAEF,MAAM,CAACR;AAAtC;AAAzB;AAAhB,eAAD,CAAxB;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;KA3BMR,W;AA2BN;AACD,eAAeA,WAAf","sourcesContent":["import './FormNpsText.scss';\nimport React, {useState, useEffect} from 'react';\nimport ButtonComponent from '../button-component/ButtonComponent';\n\n\nfunction FormNpsText({ title, question, answer, coment, showTag, showButtons, id, value, setValue }){\n  const buttonNumber = [0,1,2,3,4,5,7,8,9,10];\n\n    return (\n      <>\n        <div className =\"text-form-container\">\n          <div className=\"text-form\">\n            <h1 className=\"title-form\">{title}</h1>\n              <p>{question}</p>\n\n              <div className=\"button-order\">\n                <p>{answer}</p>\n                <div className=\"btnQuestions\" style={showButtons}>\n                {buttonNumber.map((number, indice)=>(\n                  <ButtonComponent key={indice} nameBtn={number} variant=\"outlined\" buttonClick={() => setValue({...value, nps:{...value.nps, question1:{...value.nps.question1, number}}})}/>\n                ))}\n                </div>               \n              </div>\n             \n              <div className=\"area-coment\" style={showTag}>\n                <p>{coment}</p>\n                <textarea id={id} placeholder=\"Digite sua resposta\" onChange={({ target }) => setValue({...value, nps: {...value.nps, question2:{...value.nps.question2, text: target.value}}})}></textarea>\n              </div>\n          </div>           \n        </div>\n      </>\n    );\n  };\n  export default FormNpsText;"]},"metadata":{},"sourceType":"module"}