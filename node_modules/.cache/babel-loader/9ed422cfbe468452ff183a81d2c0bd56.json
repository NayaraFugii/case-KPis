{"ast":null,"code":"var _jsxFileName = \"/home/user/\\xC1rea de Trabalho/case-KPis/src/components/form-nps-button/FormNpsButton.js\",\n    _s = $RefreshSig$();\n\nimport './FormNpsButton.scss';\nimport React, { useState, useEffect } from 'react';\nimport ButtonComponent from '../button-component/ButtonComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormNpsButton(_ref) {\n  _s();\n\n  let {\n    title,\n    question,\n    answer,\n    coment,\n    showTag,\n    showButtons,\n    id,\n    value,\n    setValue\n  } = _ref;\n  const buttonNumber = [0, 1, 2, 3, 4, 5, 7, 8, 9, 10];\n  const [textArea, setTextArea] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-question\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-question\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-order\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnQuestions\",\n            style: showButtons,\n            children: buttonNumber.map((number, indice) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-list\",\n              children: /*#__PURE__*/_jsxDEV(ButtonComponent, {\n                nameBtn: number,\n                variant: \"outlined\",\n                buttonClick: () => setValue({ ...value,\n                  nps: { ...value.nps,\n                    question1: { ...value.nps.question1,\n                      number\n                    }\n                  }\n                })\n              }, number, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area-coment\",\n          style: showTag,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: coment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: id,\n            placeholder: \"Digite sua resposta\",\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setValue({ ...value,\n                nps: { ...value.nps,\n                  question1: { ...value.nps.question1,\n                    text: target.value\n                  }\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormNpsButton, \"AL42t4Ol08OaEV5T++jNrTslA/I=\");\n\n_c = FormNpsButton;\n;\nexport default FormNpsButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormNpsButton\");","map":{"version":3,"sources":["/home/user/√Årea de Trabalho/case-KPis/src/components/form-nps-button/FormNpsButton.js"],"names":["React","useState","useEffect","ButtonComponent","FormNpsButton","title","question","answer","coment","showTag","showButtons","id","value","setValue","buttonNumber","textArea","setTextArea","map","number","indice","nps","question1","target","text"],"mappings":"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","sourcesContent":["import './FormNpsButton.scss';\nimport React, {useState, useEffect} from 'react';\nimport ButtonComponent from '../button-component/ButtonComponent';\n\n\nfunction FormNpsButton({ title, question, answer, coment, showTag, showButtons, id, value, setValue }){\n  const buttonNumber = [0,1,2,3,4,5,7,8,9,10];\n  const [textArea, setTextArea] = useState('');\n\n    return (\n      <>\n        <div className =\"text-form-container\">\n          <div className=\"text-form\">\n            <h1 className=\"title-question\">{title}</h1>\n              <p className=\"text-question\">{question}</p>\n\n              <div className=\"button-order\">\n                <p>{answer}</p>\n                <div className=\"btnQuestions\" style={showButtons}>\n                {buttonNumber.map((number, indice)=>(\n                  <div className='button-list'>\n                  <ButtonComponent key={number} nameBtn={number} variant=\"outlined\" buttonClick={() => setValue({...value, nps:{...value.nps, question1:{...value.nps.question1, number}}})}/>\n                  </div>\n                ))}\n                </div>               \n              </div>\n             \n              <div className=\"area-coment\" style={showTag}>\n                <p>{coment}</p>\n                <textarea id={id} placeholder=\"Digite sua resposta\" onChange={({ target }) => setValue({...value, nps:\n                   {...value.nps, question1:{...value.nps.question1, text: target.value}}})}></textarea>\n              </div>\n          </div>           \n        </div>\n      </>\n    );\n  };\n  export default FormNpsButton;"]},"metadata":{},"sourceType":"module"}