{"ast":null,"code":"var _jsxFileName = \"/home/user/\\xC1rea de Trabalho/case-KPis/src/components/form /Form.js\",\n    _s = $RefreshSig$();\n\nimport './Form.scss';\nimport React, { useState, useEffect } from 'react';\nimport ButtonComponent from '../../components/button-component/ButtonComponent';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    title,\n    question,\n    answer,\n    coment,\n    showTag,\n    showButtons,\n    id,\n    setValue\n  } = _ref;\n  const buttonNumber = [0, 1, 2, 3, 4, 5, 7, 8, 9, 10];\n  const [dataFormValid, setdataFormValid] = useState([]);\n  /* const [textArea, setTextArea] = useState(''); */\n\n  useEffect(() => {\n    setValue(!!dataFormValid);\n  }, [dataFormValid]);\n  console.log({\n    dataFormValid\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-form\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-order\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnQuestions\",\n            style: showButtons,\n            children: buttonNumber.map((number, indice) => /*#__PURE__*/_jsxDEV(ButtonComponent, {\n              nameBtn: number,\n              variant: \"outlined\",\n              buttonClick: () => setdataFormValid(String(number))\n            }, indice, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area-coment\",\n          style: showTag,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: coment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: id,\n            placeholder: \"Digite sua resposta\",\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setdataFormValid(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Form, \"4hZJyCJuaoiXKfHjeroodqB2TyY=\");\n\n_c = Form;\n;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/user/Área de Trabalho/case-KPis/src/components/form /Form.js"],"names":["React","useState","useEffect","ButtonComponent","FormGroup","Form","title","question","answer","coment","showTag","showButtons","id","setValue","buttonNumber","dataFormValid","setdataFormValid","console","log","map","number","indice","String","target","value"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;;AAEA,SAASC,IAAT,OAAoF;AAAA;;AAAA,MAAtE;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA,OAAlC;AAA2CC,IAAAA,WAA3C;AAAwDC,IAAAA,EAAxD;AAA4DC,IAAAA;AAA5D,GAAsE;AAElF,QAAMC,YAAY,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAArB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,QAAQ,CAAC,CAAC,CAAEE,aAAJ,CAAR;AACA,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA;AAAD,GAAZ;AACE,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BT;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,KAAK,EAAEG,WAArC;AAAA,sBACCG,YAAY,CAACK,GAAb,CAAiB,CAACC,MAAD,EAASC,MAAT,kBAChB,QAAC,eAAD;AAA8B,cAAA,OAAO,EAAED,MAAvC;AAA+C,cAAA,OAAO,EAAC,UAAvD;AAAkE,cAAA,WAAW,EAAE,MAAKJ,gBAAgB,CAACM,MAAM,CAACF,MAAD,CAAP;AAApG,eAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA,oBADD;AADD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAaI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAEX,OAApC;AAAA,kCACE;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,EAAE,EAAEG,EAAd;AAAiB,YAAA,WAAW,EAAC,qBAA7B;AAAmD,YAAA,QAAQ,EAAE;AAAA,kBAAC;AAAEW,gBAAAA;AAAF,eAAD;AAAA,qBAAgBP,gBAAgB,CAACO,MAAM,CAACC,KAAR,CAAhC;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GAnCMnB,I;;KAAAA,I;AAmCN;AACD,eAAeA,IAAf","sourcesContent":["import './Form.scss';\nimport React, {useState, useEffect} from 'react';\nimport ButtonComponent from '../../components/button-component/ButtonComponent';\nimport FormGroup from '@material-ui/core/FormGroup'\n\nfunction Form({title, question, answer, coment, showTag, showButtons, id, setValue}){\n\n  const buttonNumber = [0,1,2,3,4,5,7,8,9,10];\n  const [dataFormValid, setdataFormValid] = useState([]);\n  /* const [textArea, setTextArea] = useState(''); */\n\n  useEffect(() => {\n   setValue(!!(dataFormValid))\n  }, [dataFormValid])\n\n  console.log({dataFormValid})\n    return (\n      <>\n        <div className =\"text-form-container\">\n          <div className=\"text-form\">\n            <h1 className=\"title-form\">{title}</h1>\n              <p>{question}</p>\n\n              <div className=\"button-order\">\n                <p>{answer}</p>\n                <div className=\"btnQuestions\" style={showButtons}>\n                {buttonNumber.map((number, indice)=>(\n                  <ButtonComponent key={indice} nameBtn={number} variant=\"outlined\" buttonClick={()=> setdataFormValid(String(number))}/>\n                ))}\n                </div>               \n              </div>\n             \n              <div className=\"area-coment\" style={showTag}>\n                <p>{coment}</p>\n                <textarea id={id}placeholder=\"Digite sua resposta\" onChange={({ target }) => setdataFormValid(target.value)}></textarea>\n              </div>\n          </div>           \n        </div>\n      </>\n    );\n  };\n  export default Form;"]},"metadata":{},"sourceType":"module"}